name: Test & Release

on: workflow_dispatch

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PACKAGE_NAME: tantivy
  PYTHON_VERSION: "3.7" # to build tantivy wheels
  MATURIN_VERSION: "v0.13.1"

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@74b568e8591fbb3115c70f3436a0c6b0909a8504
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@63eb9591781c46a70274cb3ebdf190fce92702e8
        with:
          toolchain: stable
          profile: minimal
          default: true

      - name: Build wheels - x86_64
        uses: messense/maturin-action@20111a7c286a91434bdd7f612314a38ff6c091ad
        with:
          target: x86_64
          args: --release --out dist --sdist
          maturin-version: ${{ env.MATURIN_VERSION }}

      - name: Install built wheel - x86_64
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          pip install nox
          nox

      - name: Build wheels - universal2
        uses: messense/maturin-action@20111a7c286a91434bdd7f612314a38ff6c091ad
        with:
          args: --release --universal2 --out dist
          maturin-version: ${{ env.MATURIN_VERSION }}

      - name: Install built wheel - universal2
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*universal2.whl --force-reinstall
          pip install nox
          nox

      - name: Upload wheels
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@74b568e8591fbb3115c70f3436a0c6b0909a8504
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ matrix.target }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@63eb9591781c46a70274cb3ebdf190fce92702e8
        with:
          toolchain: stable
          profile: minimal
          default: true

      - name: Build wheels
        uses: messense/maturin-action@20111a7c286a91434bdd7f612314a38ff6c091ad
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
          maturin-version: ${{ env.MATURIN_VERSION }}

      - name: Install built wheel
        shell: bash
        run: |
          python -m pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          pip install nox
          nox

      - name: Upload wheels
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@74b568e8591fbb3115c70f3436a0c6b0909a8504
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64

      - name: Build wheels
        uses: messense/maturin-action@20111a7c286a91434bdd7f612314a38ff6c091ad
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
          maturin-version: ${{ env.MATURIN_VERSION }}

      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          pip install nox
          nox

      - name: Upload wheels
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: wheels
          path: dist

  linux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [aarch64, armv7, s390x, ppc64le, ppc64]
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@74b568e8591fbb3115c70f3436a0c6b0909a8504
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Build wheels
        uses: messense/maturin-action@20111a7c286a91434bdd7f612314a38ff6c091ad
        with:
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
          maturin-version: ${{ env.MATURIN_VERSION }}

      - uses: uraimo/run-on-arch-action@cd5f294c3b7be88bc5b708fe25e1af36818f9ead
        if: matrix.target != 'ppc64'
        name: Install built wheel
        with:
          arch: ${{ matrix.target }}
          distro: ubuntu20.04
          githubToken: ${{ github.token }}
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-pip
            pip3 install -U pip
          run: |
            pip3 install ${{ env.PACKAGE_NAME }} --no-index --find-links dist/ --force-reinstall
            pip install nox
            nox

      - name: Upload wheels
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: wheels
          path: dist

  musllinux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - i686-unknown-linux-musl
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@74b568e8591fbb3115c70f3436a0c6b0909a8504
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64

      - name: Build wheels
        uses: messense/maturin-action@20111a7c286a91434bdd7f612314a38ff6c091ad
        with:
          target: ${{ matrix.target }}
          manylinux: musllinux_1_2
          args: --release --out dist
          maturin-version: ${{ env.MATURIN_VERSION }}

      - name: Install built wheel
        if: matrix.target == 'x86_64-unknown-linux-musl'
        uses: addnab/docker-run-action@4f65fabd2431ebc8d299f8e5a018d79a769ae185
        with:
          image: alpine:latest
          options: -v ${{ github.workspace }}:/io -w /io
          run: |
            apk add py3-pip
            pip3 install -U pip nox
            pip3 install ${{ env.PACKAGE_NAME }} --no-index --find-links /io/dist/ --force-reinstall
            nox

      - name: Upload wheels
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: wheels
          path: dist

  musllinux-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - target: aarch64-unknown-linux-musl
            arch: aarch64
          - target: armv7-unknown-linux-musleabihf
            arch: armv7
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@74b568e8591fbb3115c70f3436a0c6b0909a8504
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Build wheels
        uses: messense/maturin-action@20111a7c286a91434bdd7f612314a38ff6c091ad
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_2
          args: --release --out dist
          maturin-version: ${{ env.MATURIN_VERSION }}

      - uses: uraimo/run-on-arch-action@d9e985ee32020b12e9cafe5b7d52cf0122bb7609
        name: Install built wheel
        with:
          arch: ${{ matrix.platform.arch }}
          distro: alpine_latest
          githubToken: ${{ github.token }}
          install: |
            apk add py3-pip
            pip3 install -U pip nox
          run: |
            pip3 install ${{ env.PACKAGE_NAME }} --no-index --find-links dist/ --force-reinstall
            nox

      - name: Upload wheels
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: wheels
          path: dist

  pypy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        target: [x86_64, aarch64]
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
        exclude:
          - os: macos-latest
            target: aarch64
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@74b568e8591fbb3115c70f3436a0c6b0909a8504
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
      - uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
        with:
          python-version: pypy${{ matrix.python-version }}

      - name: Build wheels
        uses: messense/maturin-action@20111a7c286a91434bdd7f612314a38ff6c091ad
        with:
          maturin-version: ${{ env.MATURIN_VERSION }}
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist -i pypy${{ matrix.python-version }}

      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install dist/${{ env.PACKAGE_NAME }}-*.whl --force-reinstall
          pip install nox
          nox

      - name: Upload wheels
        uses: actions/upload-artifact@82c141cc518b40d92cc801eee768e7aafc9c2fa2
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - macos
      - windows
      - linux
      - linux-cross
      - musllinux
      - musllinux-cross
      - pypy
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@74b568e8591fbb3115c70f3436a0c6b0909a8504
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - uses: actions/download-artifact@fb598a63ae348fa914e94cd0ff38f362e927b741
        with:
          name: wheels
      - uses: actions/setup-python@7f80679172b057fc5e90d70d197929d454754a5a
      - name: Publish to PyPi
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *